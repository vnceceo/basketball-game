const socket = io(); const canvas = document.getElementById('gameCanvas'); const ctx = canvas.getContext('2d'); let player = { x: 100, y: 500, width: 50, height: 50, color: 'red' }; let opponent = { x: 650, y: 500, width: 50, height: 50, color: 'blue' }; let ball = { x: 400, y: 300, radius: 15, dx: 0, dy: 0, color: 'orange' }; document.addEventListener('keydown', (event) => { if (event.key === 'ArrowUp') { player.y -= 20; } if (event.key === 'ArrowDown') { player.y += 20; } if (event.key === 'ArrowLeft') { player.x -= 20; } if (event.key === 'ArrowRight') { player.x += 20; } socket.emit('move', { x: player.x, y: player.y }); }); function draw() { ctx.clearRect(0, 0, canvas.width, canvas.height); ctx.fillStyle = player.color; ctx.fillRect(player.x, player.y, player.width, player.height); ctx.fillStyle = opponent.color; ctx.fillRect(opponent.x, opponent.y, opponent.width, opponent.height); ctx.fillStyle = ball.color; ctx.beginPath(); ctx.arc(ball.x, ball.y, ball.radius, 0, Math.PI * 2); ctx.fill(); } function gameLoop() { draw(); socket.emit('ball', ball); requestAnimationFrame(gameLoop); } socket.on('opponentMove', (data) => { opponent.x = data.x; opponent.y = data.y; }); socket.on('ballUpdate', (data) => { ball.x = data.x; ball.y = data.y; ball.dx = data.dx; ball.dy = data.dy; }); gameLoop();